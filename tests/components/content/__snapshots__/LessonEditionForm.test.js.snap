// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
<styled.form
  display="grid"
  gridGap="1em"
  height="max-content"
  onSubmit={[Function]}
>
  <LabeledInput
    defaultValue="dummy_lesson_title"
    disabled={false}
    errorText=""
    hasError={false}
    hintText=""
    id="title"
    key="title"
    name="title"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="lessons.edition.form.fields.title.placeholder"
    textStyle="brevier"
    type="text"
  >
    lessons.edition.form.fields.title.label
  </LabeledInput>
  <LabeledTextArea
    defaultValue="dummy_lesson_description"
    disabled={false}
    errorText=""
    hasError={false}
    hintText=""
    id="description"
    key="description"
    name="description"
    onBlur={[Function]}
    onChange={[Function]}
    placeholder="lessons.edition.form.fields.description.placeholder"
    rows={6}
    type="textarea"
  >
    lessons.edition.form.fields.description.label
  </LabeledTextArea>
  <LabeledSelect
    defaultValue={
      Object {
        "label": 0,
        "value": 0,
      }
    }
    disabled={false}
    errorText=""
    hasError={false}
    hintText=""
    id="order"
    key="order"
    multiple={false}
    name="order"
    onBlur={[Function]}
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": 0,
          "value": 0,
        },
        Object {
          "label": 1,
          "value": 1,
        },
        Object {
          "label": 2,
          "value": 2,
        },
      ]
    }
    required={true}
    textStyle="brevier"
    type="select"
  >
    lessons.edition.form.fields.order.label
  </LabeledSelect>
  <styled.div>
    <styled.span
      isError={false}
    >
      lessons.edition.form.fields.content.label
    </styled.span>
    <Styled(styled.div)
      isError={false}
    >
      <RichMarkdownEditor
        defaultValue="dummy_lesson_content"
        dir="auto"
        embeds={Array []}
        extensions={Array []}
        id="lesson-editor"
        onBlur={[Function]}
        onChange={[Function]}
        onClickLink={[Function]}
        onImageUploadStart={[Function]}
        onImageUploadStop={[Function]}
        placeholder="lessons.edition.form.fields.content.placeholder"
        tooltip={[Function]}
      />
    </Styled(styled.div)>
  </styled.div>
  <PrimaryButton
    justifySelf="start"
    type="submit"
  >
    lessons.edition.form.action.submit
  </PrimaryButton>
</styled.form>
`;
