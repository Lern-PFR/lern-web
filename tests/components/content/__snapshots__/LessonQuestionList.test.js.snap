// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Concept edition page - lesson list snapshots should match previous snapshot with a non-empty moduleList prop 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <LessonQuestionList
    exerciseList={
      Array [
        Object {
          "description": "dummy_lesson_desc_1",
          "id": "dummy_lesson_id_1",
          "title": "dummy_lesson_title_1",
        },
        Object {
          "description": "dummy_lesson_desc_2",
          "id": "dummy_lesson_id_2",
          "title": "dummy_lesson_title_2",
        },
        Object {
          "description": "dummy_lesson_desc_3",
          "id": "dummy_lesson_id_3",
          "title": "dummy_lesson_title_3",
        },
      ]
    }
    lessonId="1"
  />
</ContextProvider>
`;

exports[`Concept edition page - lesson list snapshots should match previous snapshot with an empty lessonList prop 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <LessonQuestionList
    exerciseList={Array []}
    lessonId="1"
  />
</ContextProvider>
`;
